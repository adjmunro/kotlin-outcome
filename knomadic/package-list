$dokka.format:html-v1
$dokka.linkExtension:html
$dokka.location:nz.adjmunro.knomadic.fetch.flow////PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.flow/index.html
$dokka.location:nz.adjmunro.knomadic.fetch.flow//fetchOrDefault/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.flow/fetch-or-default.html
$dokka.location:nz.adjmunro.knomadic.fetch.flow//fetchOrElse/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]#kotlin.coroutines.SuspendFunction1[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])],TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.flow/fetch-or-else.html
$dokka.location:nz.adjmunro.knomadic.fetch.flow//fetchOrNull/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.flow/fetch-or-null.html
$dokka.location:nz.adjmunro.knomadic.fetch.flow//fetchOrThrow/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.flow/fetch-or-throw.html
$dokka.location:nz.adjmunro.knomadic.fetch.flow//fetchUnwrap/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any?])]]#kotlin.coroutines.SuspendFunction1[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any?])],TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.flow/fetch-unwrap.html
$dokka.location:nz.adjmunro.knomadic.fetch.flow//filterOnlyFinished/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.flow/filter-only-finished.html
$dokka.location:nz.adjmunro.knomadic.fetch.flow//flatMapFetching/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]#kotlin.coroutines.SuspendFunction0[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.flow/flat-map-fetching.html
$dokka.location:nz.adjmunro.knomadic.fetch.flow//flatMapFinished/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any]),nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.flow/flat-map-finished.html
$dokka.location:nz.adjmunro.knomadic.fetch.flow//flatMapInitial/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]#kotlin.coroutines.SuspendFunction0[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.flow/flat-map-initial.html
$dokka.location:nz.adjmunro.knomadic.fetch.flow//flatten/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.fetch.Fetch[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.flow/flatten.html
$dokka.location:nz.adjmunro.knomadic.fetch.flow//fold/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]#kotlin.coroutines.SuspendFunction0[TypeParam(bounds=[kotlin.Any?])]#kotlin.coroutines.SuspendFunction0[TypeParam(bounds=[kotlin.Any?])]#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.flow/fold.html
$dokka.location:nz.adjmunro.knomadic.fetch.flow//mapFetchingToFinished/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]#kotlin.coroutines.SuspendFunction0[TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.flow/map-fetching-to-finished.html
$dokka.location:nz.adjmunro.knomadic.fetch.flow//mapFinished/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.flow/map-finished.html
$dokka.location:nz.adjmunro.knomadic.fetch.flow//mapInitialToFinished/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]#kotlin.coroutines.SuspendFunction0[TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.flow/map-initial-to-finished.html
$dokka.location:nz.adjmunro.knomadic.fetch.flow//mapToFinished/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]#kotlin.coroutines.SuspendFunction0[TypeParam(bounds=[kotlin.Any])]#kotlin.coroutines.SuspendFunction0[TypeParam(bounds=[kotlin.Any])]#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.flow/map-to-finished.html
$dokka.location:nz.adjmunro.knomadic.fetch.flow//onEachFetch/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]#kotlin.coroutines.SuspendFunction1[nz.adjmunro.knomadic.fetch.Fetch.Initial,kotlin.Unit]#kotlin.coroutines.SuspendFunction1[nz.adjmunro.knomadic.fetch.Fetch.Fetching,kotlin.Unit]#kotlin.coroutines.SuspendFunction2[nz.adjmunro.knomadic.fetch.Fetch.Finished[TypeParam(bounds=[kotlin.Any])],TypeParam(bounds=[kotlin.Any]),kotlin.Unit]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.flow/on-each-fetch.html
$dokka.location:nz.adjmunro.knomadic.fetch.members////PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/index.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//flatMapFetching/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#kotlin.Function0[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/flat-map-fetching.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//flatMapFinished/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/flat-map-finished.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//flatMapInitial/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#kotlin.Function0[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/flat-map-initial.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//flatten/nz.adjmunro.knomadic.fetch.Fetch[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/flatten.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//fold/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/fold.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//getOrDefault/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/get-or-default.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//getOrElse/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])],TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/get-or-else.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//getOrNull/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/get-or-null.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//getOrThrow/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/get-or-throw.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//isFetching/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/is-fetching.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//isFinished/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/is-finished.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//isFinished/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),kotlin.Boolean]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/is-finished.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//isNotFetching/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/is-not-fetching.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//isNotFinished/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/is-not-finished.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//isNotStarted/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/is-not-started.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//isStarted/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/is-started.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//mapFetchingToFinished/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#kotlin.Function0[TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/map-fetching-to-finished.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//mapFinished/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/map-finished.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//mapInitialToFinished/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#kotlin.Function0[TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/map-initial-to-finished.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//mapToFinished/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#kotlin.Function0[TypeParam(bounds=[kotlin.Any])]#kotlin.Function0[TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/map-to-finished.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//onFetching/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[nz.adjmunro.knomadic.fetch.Fetch.Fetching,kotlin.Unit]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/on-fetching.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//onFinished/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#kotlin.Boolean#kotlin.Function1[nz.adjmunro.knomadic.fetch.Fetch.Finished[TypeParam(bounds=[kotlin.Any])],kotlin.Unit]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/on-finished.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//onFinished/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),kotlin.Boolean]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),kotlin.Unit]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/on-finished.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//onFinished/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),kotlin.Unit]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/on-finished.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//onInitial/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[nz.adjmunro.knomadic.fetch.Fetch.Initial,kotlin.Unit]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/on-initial.html
$dokka.location:nz.adjmunro.knomadic.fetch.members//unwrap/nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any?])],TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch.members/unwrap.html
$dokka.location:nz.adjmunro.knomadic.fetch////PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/index.html
$dokka.location:nz.adjmunro.knomadic.fetch//emit/kotlinx.coroutines.flow.FlowCollector[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function2[kotlinx.coroutines.flow.FlowCollector[TypeParam(bounds=[kotlin.Any?])],kotlin.Throwable,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[kotlinx.coroutines.flow.FlowCollector[TypeParam(bounds=[kotlin.Any?])],TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/emit.html
$dokka.location:nz.adjmunro.knomadic.fetch//fetch/#kotlin.time.Duration#kotlin.Function2[kotlinx.coroutines.flow.FlowCollector[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]],kotlin.Throwable,nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]#kotlin.coroutines.SuspendFunction1[kotlinx.coroutines.flow.FlowCollector[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]],TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/fetch.html
$dokka.location:nz.adjmunro.knomadic.fetch//fetching/kotlinx.coroutines.flow.FlowCollector[nz.adjmunro.knomadic.fetch.Fetch[kotlin.Nothing]]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/fetching.html
$dokka.location:nz.adjmunro.knomadic.fetch//finished/kotlinx.coroutines.flow.FlowCollector[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/finished.html
$dokka.location:nz.adjmunro.knomadic.fetch//reset/kotlinx.coroutines.flow.FlowCollector[nz.adjmunro.knomadic.fetch.Fetch[kotlin.Nothing]]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/reset.html
$dokka.location:nz.adjmunro.knomadic.fetch/ErrorWithCache///PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/-error-with-cache/index.html
$dokka.location:nz.adjmunro.knomadic.fetch/ErrorWithCache/ErrorWithCache/#TypeParam(bounds=[kotlin.Any])#TypeParam(bounds=[kotlin.Any])?/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/-error-with-cache/-error-with-cache.html
$dokka.location:nz.adjmunro.knomadic.fetch/ErrorWithCache/cache/#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/-error-with-cache/cache.html
$dokka.location:nz.adjmunro.knomadic.fetch/ErrorWithCache/error/#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/-error-with-cache/error.html
$dokka.location:nz.adjmunro.knomadic.fetch/ErrorWithCache/hasCache/#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/-error-with-cache/has-cache.html
$dokka.location:nz.adjmunro.knomadic.fetch/Fetch.Fetching///PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/-fetch/-fetching/index.html
$dokka.location:nz.adjmunro.knomadic.fetch/Fetch.Finished///PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/-fetch/-finished/index.html
$dokka.location:nz.adjmunro.knomadic.fetch/Fetch.Finished/Finished/#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/-fetch/-finished/-finished.html
$dokka.location:nz.adjmunro.knomadic.fetch/Fetch.Finished/component1/#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/-fetch/-finished/component1.html
$dokka.location:nz.adjmunro.knomadic.fetch/Fetch.Finished/result/#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/-fetch/-finished/result.html
$dokka.location:nz.adjmunro.knomadic.fetch/Fetch.Finished/toString/#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/-fetch/-finished/to-string.html
$dokka.location:nz.adjmunro.knomadic.fetch/Fetch.Initial///PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/-fetch/-initial/index.html
$dokka.location:nz.adjmunro.knomadic.fetch/Fetch///PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/-fetch/index.html
$dokka.location:nz.adjmunro.knomadic.fetch/SafeFetchFlow///PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/-safe-fetch-flow/index.html
$dokka.location:nz.adjmunro.knomadic.fetch/SafeFetchFlow/collectSafely/#kotlinx.coroutines.flow.FlowCollector[nz.adjmunro.knomadic.fetch.Fetch[TypeParam(bounds=[kotlin.Any])]]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.fetch/-safe-fetch-flow/collect-safely.html
$dokka.location:nz.adjmunro.knomadic.outcome.members////PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/index.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//aggregate/kotlin.collections.Iterable[nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]]#kotlin.Function1[kotlin.collections.List[TypeParam(bounds=[kotlin.Any])],TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/aggregate.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//andIf/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),kotlin.Boolean]#kotlin.Function1[kotlin.Throwable,nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]]#kotlin.Function2[nz.adjmunro.knomadic.raise.RaiseScope[TypeParam(bounds=[kotlin.Any])],TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/and-if.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//andThen/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[kotlin.Throwable,nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]]#kotlin.Function2[nz.adjmunro.knomadic.raise.RaiseScope[TypeParam(bounds=[kotlin.Any])],TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/and-then.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//coerceToFailure/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/coerce-to-failure.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//coerceToSuccess/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/coerce-to-success.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//collapse/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])]),TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])]]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/collapse.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//collapse/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]]#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?])]#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/collapse.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//collapse/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])]),TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/collapse.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//errorOrDefault/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/error-or-default.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//errorOrElse/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/error-or-else.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//errorOrNull/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/error-or-null.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//errorOrThrow/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/error-or-throw.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//falter/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/falter.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//filterOnlyFailure/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/filter-only-failure.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//filterOnlySuccess/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/filter-only-success.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//flatMapFailure/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/flat-map-failure.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//flatMapSuccess/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/flat-map-success.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//flatten/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])]),nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])]),TypeParam(bounds=[kotlin.Any])]]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/flatten.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//flatten/nz.adjmunro.knomadic.outcome.Outcome[nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])]),TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])],nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])]),TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])]]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/flatten.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//flatten/nz.adjmunro.knomadic.outcome.Outcome[nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])],TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/flatten.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//flattenNestedBoth/nz.adjmunro.knomadic.outcome.Outcome[nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])]),TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])],nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])]),TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])]]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/flatten-nested-both.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//flattenNestedFailure/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])]),nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])]),TypeParam(bounds=[kotlin.Any])]]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/flatten-nested-failure.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//flattenNestedSuccess/nz.adjmunro.knomadic.outcome.Outcome[nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])],TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/flatten-nested-success.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//fold/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/fold.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//getOrDefault/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/get-or-default.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//getOrElse/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/get-or-else.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//getOrNull/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/get-or-null.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//getOrThrow/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/get-or-throw.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//invert/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/invert.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//isFailure/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/is-failure.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//isFailure/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),kotlin.Boolean]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/is-failure.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//isSuccess/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/is-success.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//isSuccess/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),kotlin.Boolean]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/is-success.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//map/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/map.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//mapEachFailure/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]]#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/map-each-failure.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//mapEachSuccess/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]]#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/map-each-success.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//mapFailure/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/map-failure.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//mapSuccess/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/map-success.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//onEachFailure/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]]#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any]),kotlin.Unit]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/on-each-failure.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//onEachSuccess/kotlinx.coroutines.flow.Flow[nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]]#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any]),kotlin.Unit]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/on-each-success.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//onFailure/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),kotlin.Unit]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/on-failure.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//onSuccess/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),kotlin.Unit]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/on-success.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//recover/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/recover.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//rfold/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/rfold.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//tryRecover/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[kotlin.Throwable,nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]]#kotlin.Function2[nz.adjmunro.knomadic.raise.RaiseScope[TypeParam(bounds=[kotlin.Any])],TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/try-recover.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//unwrap/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/unwrap.html
$dokka.location:nz.adjmunro.knomadic.outcome.members//unwrapError/nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome.members/unwrap-error.html
$dokka.location:nz.adjmunro.knomadic.outcome////PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/index.html
$dokka.location:nz.adjmunro.knomadic.outcome//failureOf/#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/failure-of.html
$dokka.location:nz.adjmunro.knomadic.outcome//faultyOf/#kotlin.Function1[kotlin.Throwable,nz.adjmunro.knomadic.outcome.Outcome[kotlin.Unit,TypeParam(bounds=[kotlin.Any])]]#kotlin.Function1[nz.adjmunro.knomadic.raise.RaiseScope[TypeParam(bounds=[kotlin.Any])],kotlin.Unit]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/faulty-of.html
$dokka.location:nz.adjmunro.knomadic.outcome//maybeOf/#kotlin.Function1[kotlin.Throwable,nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),kotlin.Unit]]#kotlin.Function1[nz.adjmunro.knomadic.raise.RaiseScope[kotlin.Any],TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/maybe-of.html
$dokka.location:nz.adjmunro.knomadic.outcome//outcomeFailed/#kotlin.Any?/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/outcome-failed.html
$dokka.location:nz.adjmunro.knomadic.outcome//outcomeOf/#kotlin.Function1[kotlin.Throwable,nz.adjmunro.knomadic.outcome.Outcome[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]]#kotlin.Function1[nz.adjmunro.knomadic.raise.RaiseScope[TypeParam(bounds=[kotlin.Any])],TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/outcome-of.html
$dokka.location:nz.adjmunro.knomadic.outcome//outcomePassed/#kotlin.Any?/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/outcome-passed.html
$dokka.location:nz.adjmunro.knomadic.outcome//successOf/#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/success-of.html
$dokka.location:nz.adjmunro.knomadic.outcome//wrapFaulty/TypeParam(bounds=[kotlin.Any?])#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/wrap-faulty.html
$dokka.location:nz.adjmunro.knomadic.outcome//wrapFaulty/TypeParam(bounds=[kotlin.Throwable])#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/wrap-faulty.html
$dokka.location:nz.adjmunro.knomadic.outcome//wrapMaybe/TypeParam(bounds=[kotlin.Any?])#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/wrap-maybe.html
$dokka.location:nz.adjmunro.knomadic.outcome//wrapOutcome/TypeParam(bounds=[kotlin.Any?])#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/wrap-outcome.html
$dokka.location:nz.adjmunro.knomadic.outcome/Faulty///PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/-faulty/index.html
$dokka.location:nz.adjmunro.knomadic.outcome/Maybe///PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/-maybe/index.html
$dokka.location:nz.adjmunro.knomadic.outcome/Outcome.Failure///PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/-outcome/-failure/index.html
$dokka.location:nz.adjmunro.knomadic.outcome/Outcome.Failure/Failure/#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/-outcome/-failure/-failure.html
$dokka.location:nz.adjmunro.knomadic.outcome/Outcome.Failure/component2/#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/-outcome/-failure/component2.html
$dokka.location:nz.adjmunro.knomadic.outcome/Outcome.Failure/error/#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/-outcome/-failure/error.html
$dokka.location:nz.adjmunro.knomadic.outcome/Outcome.Failure/toString/#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/-outcome/-failure/to-string.html
$dokka.location:nz.adjmunro.knomadic.outcome/Outcome.Success///PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/-outcome/-success/index.html
$dokka.location:nz.adjmunro.knomadic.outcome/Outcome.Success/Success/#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/-outcome/-success/-success.html
$dokka.location:nz.adjmunro.knomadic.outcome/Outcome.Success/component1/#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/-outcome/-success/component1.html
$dokka.location:nz.adjmunro.knomadic.outcome/Outcome.Success/toString/#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/-outcome/-success/to-string.html
$dokka.location:nz.adjmunro.knomadic.outcome/Outcome.Success/value/#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/-outcome/-success/value.html
$dokka.location:nz.adjmunro.knomadic.outcome/Outcome///PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/-outcome/index.html
$dokka.location:nz.adjmunro.knomadic.outcome/Outcome/component1/#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/-outcome/component1.html
$dokka.location:nz.adjmunro.knomadic.outcome/Outcome/component2/#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.outcome/-outcome/component2.html
$dokka.location:nz.adjmunro.knomadic.raise////PointingToDeclaration/knomadic/nz.adjmunro.knomadic.raise/index.html
$dokka.location:nz.adjmunro.knomadic.raise/RaiseScope.Companion///PointingToDeclaration/knomadic/nz.adjmunro.knomadic.raise/-raise-scope/-companion/index.html
$dokka.location:nz.adjmunro.knomadic.raise/RaiseScope.Companion/catch/nz.adjmunro.knomadic.raise.RaiseScope[TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[kotlin.Throwable,TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[nz.adjmunro.knomadic.raise.RaiseScope[TypeParam(bounds=[kotlin.Any])],TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.raise/-raise-scope/-companion/catch.html
$dokka.location:nz.adjmunro.knomadic.raise/RaiseScope.Companion/default/nz.adjmunro.knomadic.raise.RaiseScope.Companion#kotlin.Function1[nz.adjmunro.knomadic.raise.RaiseScope[TypeParam(bounds=[kotlin.Any])],TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.raise/-raise-scope/-companion/default.html
$dokka.location:nz.adjmunro.knomadic.raise/RaiseScope.Companion/ensure/nz.adjmunro.knomadic.raise.RaiseScope[TypeParam(bounds=[kotlin.Any])]#kotlin.Boolean#kotlin.Function0[TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.raise/-raise-scope/-companion/ensure.html
$dokka.location:nz.adjmunro.knomadic.raise/RaiseScope.Companion/ensureNotNull/nz.adjmunro.knomadic.raise.RaiseScope[TypeParam(bounds=[kotlin.Any])]#TypeParam(bounds=[kotlin.Any])?#kotlin.Function0[TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.raise/-raise-scope/-companion/ensure-not-null.html
$dokka.location:nz.adjmunro.knomadic.raise/RaiseScope.Companion/fold/nz.adjmunro.knomadic.raise.RaiseScope[TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[nz.adjmunro.knomadic.raise.RaiseScope[TypeParam(bounds=[kotlin.Any])],TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[kotlin.Throwable,TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.raise/-raise-scope/-companion/fold.html
$dokka.location:nz.adjmunro.knomadic.raise/RaiseScope.Companion/raise/nz.adjmunro.knomadic.raise.RaiseScope[TypeParam(bounds=[kotlin.Any])]#kotlin.Function0[TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.raise/-raise-scope/-companion/raise.html
$dokka.location:nz.adjmunro.knomadic.raise/RaiseScope.DefaultRaise///PointingToDeclaration/knomadic/nz.adjmunro.knomadic.raise/-raise-scope/-default-raise/index.html
$dokka.location:nz.adjmunro.knomadic.raise/RaiseScope.DefaultRaise/complete/#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.raise/-raise-scope/-default-raise/complete.html
$dokka.location:nz.adjmunro.knomadic.raise/RaiseScope.DefaultRaise/raised/#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.raise/-raise-scope/-default-raise/raised.html
$dokka.location:nz.adjmunro.knomadic.raise/RaiseScope///PointingToDeclaration/knomadic/nz.adjmunro.knomadic.raise/-raise-scope/index.html
$dokka.location:nz.adjmunro.knomadic.raise/RaiseScope/complete/#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.raise/-raise-scope/complete.html
$dokka.location:nz.adjmunro.knomadic.raise/RaiseScope/raised/#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.raise/-raise-scope/raised.html
$dokka.location:nz.adjmunro.knomadic.util////PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/index.html
$dokka.location:nz.adjmunro.knomadic.util//aggregate/kotlin.collections.Iterable[kotlin.Result[TypeParam(bounds=[kotlin.Any?])]]#kotlin.Function1[kotlin.collections.List[kotlin.Throwable],kotlin.Throwable]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/aggregate.html
$dokka.location:nz.adjmunro.knomadic.util//andIf/kotlin.Result[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/and-if.html
$dokka.location:nz.adjmunro.knomadic.util//andThen/kotlin.Result[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/and-then.html
$dokka.location:nz.adjmunro.knomadic.util//caller/TypeParam(bounds=[kotlin.Any?])#kotlin.Any?/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/caller.html
$dokka.location:nz.adjmunro.knomadic.util//emptyString/#kotlin.Any?/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/empty-string.html
$dokka.location:nz.adjmunro.knomadic.util//exceptionOrDefault/kotlin.Result[TypeParam(bounds=[kotlin.Any?])]#kotlin.Throwable/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/exception-or-default.html
$dokka.location:nz.adjmunro.knomadic.util//exceptionOrElse/kotlin.Result[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Throwable]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/exception-or-else.html
$dokka.location:nz.adjmunro.knomadic.util//exceptionOrThrow/kotlin.Result[TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/exception-or-throw.html
$dokka.location:nz.adjmunro.knomadic.util//exists/#TypeParam(bounds=[kotlin.Any?])?#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/exists.html
$dokka.location:nz.adjmunro.knomadic.util//exists/TypeParam(bounds=[kotlin.Any?])?#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/exists.html
$dokka.location:nz.adjmunro.knomadic.util//fallback/TypeParam(bounds=[kotlin.Any])?#kotlin.Function1[java.lang.NullPointerException,TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/fallback.html
$dokka.location:nz.adjmunro.knomadic.util//flatMap/kotlin.Result[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Result[TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/flat-map.html
$dokka.location:nz.adjmunro.knomadic.util//flatten/kotlin.Result[kotlin.Result[TypeParam(bounds=[kotlin.Any?])]]#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/flatten.html
$dokka.location:nz.adjmunro.knomadic.util//isFatal/kotlin.Throwable#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/is-fatal.html
$dokka.location:nz.adjmunro.knomadic.util//itself/#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/itself.html
$dokka.location:nz.adjmunro.knomadic.util//mapFailure/kotlin.Result[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[kotlin.Throwable,kotlin.Throwable]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/map-failure.html
$dokka.location:nz.adjmunro.knomadic.util//nonFatalOrThrow/TypeParam(bounds=[kotlin.Throwable])#/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/non-fatal-or-throw.html
$dokka.location:nz.adjmunro.knomadic.util//nullable/#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/nullable.html
$dokka.location:nz.adjmunro.knomadic.util//nullfold/TypeParam(bounds=[kotlin.Any?])#kotlin.Function1[java.lang.NullPointerException,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/nullfold.html
$dokka.location:nz.adjmunro.knomadic.util//nulls/#kotlin.Any?/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/nulls.html
$dokka.location:nz.adjmunro.knomadic.util//resultOf/#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/result-of.html
$dokka.location:nz.adjmunro.knomadic.util//rethrow/#kotlin.Throwable/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/rethrow.html
$dokka.location:nz.adjmunro.knomadic.util//stringCaller/TypeParam(bounds=[kotlin.Any?])#kotlin.Any?/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/string-caller.html
$dokka.location:nz.adjmunro.knomadic.util//stringItself/#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/string-itself.html
$dokka.location:nz.adjmunro.knomadic.util//throwfold/TypeParam(bounds=[kotlin.Any?])#kotlin.Function1[kotlin.Throwable,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/throwfold.html
$dokka.location:nz.adjmunro.knomadic.util//tryRecover/kotlin.Result[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[kotlin.Throwable,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/knomadic/nz.adjmunro.knomadic.util/try-recover.html
$dokka.location:nz.adjmunro.knomadic////PointingToDeclaration/knomadic/nz.adjmunro.knomadic/index.html
$dokka.location:nz.adjmunro.knomadic/FaultyFetch///PointingToDeclaration/knomadic/nz.adjmunro.knomadic/-faulty-fetch/index.html
$dokka.location:nz.adjmunro.knomadic/FaultyFlow///PointingToDeclaration/knomadic/nz.adjmunro.knomadic/-faulty-flow/index.html
$dokka.location:nz.adjmunro.knomadic/FaultyScope///PointingToDeclaration/knomadic/nz.adjmunro.knomadic/-faulty-scope/index.html
$dokka.location:nz.adjmunro.knomadic/FetchFlow///PointingToDeclaration/knomadic/nz.adjmunro.knomadic/-fetch-flow/index.html
$dokka.location:nz.adjmunro.knomadic/KnomadicDsl///PointingToDeclaration/knomadic/nz.adjmunro.knomadic/-knomadic-dsl/index.html
$dokka.location:nz.adjmunro.knomadic/KotlinResult///PointingToDeclaration/knomadic/nz.adjmunro.knomadic/-kotlin-result/index.html
$dokka.location:nz.adjmunro.knomadic/MaybeFetch///PointingToDeclaration/knomadic/nz.adjmunro.knomadic/-maybe-fetch/index.html
$dokka.location:nz.adjmunro.knomadic/MaybeFlow///PointingToDeclaration/knomadic/nz.adjmunro.knomadic/-maybe-flow/index.html
$dokka.location:nz.adjmunro.knomadic/MaybeScope///PointingToDeclaration/knomadic/nz.adjmunro.knomadic/-maybe-scope/index.html
$dokka.location:nz.adjmunro.knomadic/OutcomeFetch///PointingToDeclaration/knomadic/nz.adjmunro.knomadic/-outcome-fetch/index.html
$dokka.location:nz.adjmunro.knomadic/OutcomeFlow///PointingToDeclaration/knomadic/nz.adjmunro.knomadic/-outcome-flow/index.html
$dokka.location:nz.adjmunro.knomadic/OutcomeScope///PointingToDeclaration/knomadic/nz.adjmunro.knomadic/-outcome-scope/index.html
$dokka.location:nz.adjmunro.knomadic/ResultFetch///PointingToDeclaration/knomadic/nz.adjmunro.knomadic/-result-fetch/index.html
$dokka.location:nz.adjmunro.knomadic/ResultFlow///PointingToDeclaration/knomadic/nz.adjmunro.knomadic/-result-flow/index.html
nz.adjmunro.knomadic
nz.adjmunro.knomadic.fetch
nz.adjmunro.knomadic.fetch.flow
nz.adjmunro.knomadic.fetch.members
nz.adjmunro.knomadic.outcome
nz.adjmunro.knomadic.outcome.members
nz.adjmunro.knomadic.raise
nz.adjmunro.knomadic.util
