# Project-wide Gradle settings.
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# Official Kotlin code style:
kotlin.code.style=official

# When set to true, Gradle will reuse task outputs from any previous build
# when possible, resulting in much faster builds. (Default is false).
org.gradle.caching=true

# Enables configuration caching. Gradle will try to reuse the build
# configuration from previous builds. (Default is false).
org.gradle.configuration-cache=true

# Enables incubating configuration-on-demand, where Gradle will attempt
# to configure only necessary projects. (Default is false).
org.gradle.configureondemand=true

# When set to true the Gradle Daemon is used to run the build. (Default is true).
org.gradle.daemon=true

# Gradle Daemon will terminate itself after a specified number of idle
# milliseconds. (Default is 10_800_000 (3 hours)).
# 1800000 millis = 30 minutes
org.gradle.daemon.idletimeout=1800000

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Default is -Xmx512m "-XX:MaxMetaspaceSize=384m".
# Updated jvmargs due to this advice https://github.com/actions/runner/issues/2503
# Private repos have a 7GB RAM limit on ubuntu-latest. Public limit is 16GB RAM.
# https://docs.github.com/en/actions/using-github-hosted-runners/using-github-hosted-runners/about-github-hosted-runners
org.gradle.jvmargs=-Xmx5120M -Dkotlin.daemon.jvm.options=-Xmx1024M -XX:+HeapDumpOnOutOfMemoryError -XX:+UseParallelGC -Dfile.encoding=UTF-8

# When configured, Gradle will fork up to org.gradle.workers.max JVMs to
# execute projects in parallel. (Default is false).
org.gradle.parallel=true

# When configured, Gradle will use a maximum of the given number
# of workers. (Default is the number of CPU processors).
# org.gradle.workers.max=(max # of worker processes)

# Dokka V2
org.jetbrains.dokka.experimental.gradle.pluginMode=V2Enabled
org.jetbrains.dokka.experimental.gradle.pluginMode.noWarn=true
